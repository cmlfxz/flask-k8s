python中时间戳，datetime 和时间字符串之间得转换
# datetime时间转为字符串
def Changestr(datetime1):
    str1 = datetime1.strftime('%Y-%m-%d %H:%M:%S')
    return str1

# 字符串时间转为时间戳
def Changetime(str1):
    Unixtime = time.mktime(time.strptime(str1, '%Y-%m-%d %H:%M:%S'))
    return Unixtime

# datetime时间转为时间戳
def Changestamp(dt1):
    Unixtime = time.mktime(time.strptime(dt1.strftime('%Y-%m-%d %H:%M:%S'), '%Y-%m-%d %H:%M:%S'))
    return Unixtime

# 时间戳转为datetime时间
def Changedatetime(timestamp):
    dt = datetime.datetime.fromtimestamp(timestamp)
    return dt
# uinx时间戳转换为本地时间
def Localtime(datetime1):
    Localtime = time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(datetime1))
    return Localtime

# 字符串时间转换函数
def Normaltime(datetime1):
    Normaltime = datetime.datetime.strptime(datetime1,'%Y-%m-%d %H:%M:%S')
    return Normaltime


==================================

1、方法一
def utc_to_local(utc_time_str, utc_format='%Y-%m-%dT%H:%M:%S.%fZ'):
    local_tz = pytz.timezone('Asia/Shanghai')
    local_format = "%Y-%m-%d %H:%M:%S"
    utc_dt = datetime.strptime(utc_time_str, utc_format)
    local_dt = utc_dt.replace(tzinfo=pytz.utc).astimezone(local_tz)
    time_str = local_dt.strftime(local_format)
    return datetime.fromtimestamp(int(time.mktime(time.strptime(time_str, local_format))))

2、方法二
utc = "2018-07-17T08:48:31.151Z"
UTC_FORMAT = "%Y-%m-%dT%H:%M:%S.%fZ"
utcTime = datetime.datetime.strptime(utc, UTC_FORMAT)
localtime = utcTime + datetime.timedelta(hours=8)
print(localtime)

注解：
1、接收到的时间格式为UTC时间：2018-07-17T08:48:31.151Z
2、转换成本地时间戳，并把转换的时间戳通过 datetime.fromtimestamp() 方法转换成本地时间“Asia/Shanghai” 
