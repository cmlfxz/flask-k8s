apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-k8s-0.3
  namespace: ms-prod
  labels:
    app: flask-k8s
    version: "0.3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-k8s
      version: "0.3"
  template:
    metadata:
      labels:
        app: flask-k8s
        version: "0.3"
    spec:
      serviceAccountName: ms-prod-flask-k8s
      tolerations:
        - key: "server"
          operator: "Exists"
          values: "elk"
          effect: "NoSchedule"  
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - flask-k8s
      #       topologyKey: "kubernetes.io/hostname"

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - flask-k8s
              topologyKey: "kubernetes.io/hostname"
            weight: 100
      imagePullSecrets: 
      - name: harborsecret 
      containers:
      - name: flask-k8s
        image: myhub.mydocker.com/ms-prod/flask-k8s:0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
        volumeMounts:
        - name: log
          mountPath: /opt/microservices/logs
        - name: file-config
          mountPath: /opt/microservices/instance
      volumes:
      - name: log
        emptyDir: {}
      - name: file-config
        configMap:
          name: flask-k8s-configmap
