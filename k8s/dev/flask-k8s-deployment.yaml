apiVersion: v1
kind: Service
metadata:
  name: flask-k8s
  labels:
    app: flask-k8s
    service: flask-k8s
spec:
  type: NodePort
  ports:
  - port: 8082
    name: http
  selector:
    app: flask-k8s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ms-dev-flask-k8s
  labels:
    account: flask-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-k8s
  labels:
    app: flask-k8s
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-k8s 
      version: v1
  template:
    metadata:
      labels:
        app: flask-k8s
        version: v1
    spec:
      serviceAccountName: ms-dev-flask-k8s
      # tolerations:
      #   - key: "key"
      #     operator: "Exists"
      #     effect: "NoSchedule" 
      # tolerations:
      #   - key: "server"
      #     operator: "Equal"
      #     value: "prometheus"
      #     tolerationSeconds: 3600
      #     effect: "NoExecute" 
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - flask-k8s
      #       topologyKey: "kubernetes.io/hostname"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - flask-k8s
              topologyKey: "kubernetes.io/hostname"
            weight: 100
      imagePullSecrets: 
      - name: harborsecret 
      containers:
      - name: flask-k8s
        image: myhub.mydocker.com/ms-dev/flask-k8s:241391a
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
        env:
        - name: Module
          value: flask-k8s
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: log
          mountPath: /opt/microservices/logs
          subPath: logs/$(POD_NAMESPACE)/${Module}/$(POD_NAME)
        - name: file-config
          mountPath: /opt/microservices/instance
      volumes:
      # - name: log
      #   emptyDir: {}
      - name: log
        persistentVolumeClaim:
          claimName: pvc-rwx-nfs-retain
      - name: file-config
        configMap:
          name: flask-k8s-configmap
